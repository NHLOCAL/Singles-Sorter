import os
import json
import google.generativeai as genai
from dotenv import load_dotenv

# טעינת משתני הסביבה מקובץ .env
load_dotenv()

# קביעת מפתח ה-API של ג'מיני
genai.configure(api_key=os.getenv("GEMINI_API_KEY"))

# הגדרת הקונפיגורציה ליצירת המודל
generation_config = {
    "temperature": 1,
    "top_p": 0.95,
    "top_k": 40,
    "max_output_tokens": 8192,
    "response_mime_type": "text/plain",
}

# הגדרת המודל והנחיות המערכת
model = genai.GenerativeModel(
  model_name="gemini-2.0-flash-exp",
  generation_config=generation_config,
  system_instruction="\n# אתה מתייג נתונים עבור אימון מודל NER לזיהוי שמות שירים!\n\n**מטרה:** ליצור דאטה איכותי ומסומן היטב לאימון מודל זיהוי ישויות (NER) שיזהה קטגוריות רלוונטיות בתוך שמות שירים, תוך שימוש במספר מצומצם של קטגוריות ובדגש על דיוק בתיוג שמות המבצעים.\n\n**קטגוריות לזיהוי:**\n\n1.  **`SONG`**: שם השיר המלא, כולל כותרות משנה, סוג העיבוד המוזיקלי, ותוספות.\n2.  **`SINGER`**: שם האמן או הקבוצה המבצעת את השיר (זמרים, להקות, מקהלות, תזמורות). כל אחד בנפרד. **יש להקפיד לסמן את שם הזמר ללא תארים! לדוגמה: \"שאול מרטין\" ולא \"בעל התפילה ר' שאול מרטין\".**\n3.  **`GENRE`**: ז'אנר או סגנון מוזיקלי.\n4.  **`ALBUM`**: שם האלבום ממנו לקוח השיר (במידה ויש).\n5.  **`MISC`**: מידע נלווה שאינו משתייך לקטגוריות האחרות, ושאינו קשור למוזיקה, כגון תאריכים, מקומות, וכל דבר אחר שאינו רלוונטי למוזיקה. **מספרי רצועה לא יסומנו בקטגוריה זו**.\n\n**מבנה הדאטה:**\n\nהדאטה יאוחסן במערך JSON. כל איבר במערך יהיה רשימה המכילה שני אלמנטים:\n\n1.  **מחרוזת:** שם השיר המלא.\n2.  **אובייקט `entities`:** אובייקט JSON המכיל מערך של רשימות, כאשר כל רשימה מייצגת ישות מזוהה. כל רשימה תכלול את:\n    *   **אינדקס התחלה** של הישות בתוך המחרוזת (מספר שלם, מתחיל מ-0).\n    *   **אינדקס סיום** של הישות בתוך המחרוזת (מספר שלם).\n    *   **סוג הישות** (מחרוזת, אחת מהקטגוריות שצוינו).\n\n**הוראות לתיוג:**\n\n1.  **הכנת רשימת השירים:** הכן רשימה של שמות שירים שברצונך להשתמש בהם.\n2.  **תיוג ידני:** עבור על כל שיר ברשימה:\n    *   **קרא את שם השיר בקפידה.**\n    *   **זהה את הישויות הרלוונטיות בקטגוריות `SONG`, `SINGER`, `GENRE`, `ALBUM`, ו-`MISC` בלבד.**\n    *   **ציין את טווח התווים המדויק של כל ישות.**\n    *   **תייג כל שם זמר/מקהלה/תזמורת בנפרד.**\n    *   **יש לתייג את שם הזמר או המקהלה ללא תארים! לדוגמה: \"שאול מרטין\" ולא \"בעל התפילה ר' שאול מרטין\".**\n    *   **השתמש ב-`MISC` רק עבור מידע שאינו רלוונטי או שונה, ואינו קשור למוזיקה. אל תשתמש ב-`MISC` עבור מספרי רצועה.**\n3.  **יצירת מבנה ה-JSON:** המר את התוצאות למבנה ה-JSON הנדרש.\n4.  **בדיקת איכות:** לאחר סיום התיוג, בדוק את הנתונים כדי לוודא שהם מדויקים ועקביים.\n\n**דוגמאות מפורטות (מעודכן):**\n\n1.  **שיר:** \"מושי שוורץ ומוטי אילאוויטש מגישים את הלהיט 'מיין הארץ'\"\n\n    *   **ניתוח:**\n        *   \"מושי שוורץ\" ו\"מוטי אילאוויטש\" הם זמרים נפרדים.\n        *   \"מיין הארץ\" הוא שם השיר.\n    *   **תיוג:**\n       ```json\n        [\n            \"מושי שוורץ ומוטי אילאוויטש מגישים את הלהיט 'מיין הארץ'\",\n            {\n                \"entities\": [\n                    [\n                       0,\n                        11,\n                        \"SINGER\"\n                    ],\n                    [\n                        14,\n                        25,\n                        \"SINGER\"\n                    ],\n                     [\n                        38,\n                         48,\n                         \"SONG\"\n                       ]\n                   ]\n               }\n         ]\n       ```\n\n2.  **שיר:** \"01. ק ש ש ¥ ש ¿ נ £ - ¢ ש נ ץ ת - פ ¿ ש פ ¿ ש (Niso Slob Remix)\"\n\n    *   **ניתוח:**\n        *   \"ק ש ש ¥ ש ¿ נ £ - ¢ ש נ ץ ת - פ ¿ ש פ ¿ ש\" הוא שם השיר.\n        *   \"(Niso Slob Remix)\" הוא מידע על הרמיקס, ויסומן כ-`MISC`\n    *   **תיוג:**\n       ```json\n        [\n            \"01. ק ש ש ¥ ש ¿ נ £ - ¢ ש נ ץ ת - פ ¿ ש פ ¿ ש (Niso Slob Remix)\",\n            {\n                \"entities\": [\n                    [\n                        3,\n                        33,\n                        \"SONG\"\n                    ],\n                    [\n                        34,\n                        46,\n                        \"MISC\"\n                    ]\n                ]\n            }\n        ]\n      ```\n\n3.  **שיר:** \"מקהלת מלכות עם ישראל אדלר בפורים שפיל בציריך\"\n\n    *   **ניתוח:**\n        *   \"מקהלת מלכות\" היא מקהלה.\n        *   \"ישראל אדלר\" הוא זמר.\n         *   \"פורים\" הוא אירוע (שאינו קשור למוזיקה) ויסומן כ-`MISC`.\n         *   \"ציריך\" הוא מקום (שאינו קשור למוזיקה) ויסומן כ-`MISC`.\n    *   **תיוג:**\n         ```json\n          [\n            \"מקהלת מלכות עם ישראל אדלר בפורים שפיל בציריך\",\n             {\n               \"entities\": [\n                 [\n                   0,\n                    11,\n                   \"SINGER\"\n                  ],\n                 [\n                  16,\n                  27,\n                  \"SINGER\"\n                   ],\n                 [\n                   28,\n                  33,\n                   \"MISC\"\n                   ],\n                [\n                  34,\n                 40,\n                  \"MISC\"\n                   ]\n                ]\n              }\n           ]\n         ```\n\n4.  **שיר:** \"חיים ישראל - תן לי\"\n\n    *   **ניתוח:**\n        *   \"חיים ישראל\" הוא זמר.\n        *   \"תן לי\" הוא שם השיר.\n    *   **תיוג:**\n         ```json\n         [\n           \"חיים ישראל - תן לי\",\n           {\n             \"entities\": [\n               [\n                 0,\n                 10,\n                 \"SINGER\"\n               ],\n               [\n                 13,\n                 18,\n                 \"SONG\"\n               ]\n             ]\n           }\n         ]\n        ```\n\n5.  **שיר:** \"רמי קלינשטיין - מתנות קטנות (1)\"\n\n    *   **ניתוח:**\n        *   \"רמי קלינשטיין\" הוא זמר.\n        *   \"מתנות קטנות\" הוא שם השיר.\n         * \"(1)\" הוא חלק מהשם השיר.\n    *   **תיוג:**\n         ```json\n         [\n           \"רמי קלינשטיין - מתנות קטנות (1)\",\n           {\n             \"entities\": [\n               [\n                 0,\n                 14,\n                 \"SINGER\"\n               ],\n               [\n                 17,\n                  32,\n                 \"SONG\"\n                ]\n              ]\n             }\n        ]\n        ```\n\n6.  **שיר**: \"02-חביבי יבוא גואל\"\n    *   **ניתוח:**\n        *   \"חביבי יבוא גואל\" הוא שם השיר.\n        *   \"02-\" הוא מספר רצועה ולא יסומן כ-`MISC`.\n    *   **תיוג:**\n      ```json\n       [\n         \"02-חביבי יבוא גואל\",\n         {\n           \"entities\": [\n             [\n               3,\n              16,\n               \"SONG\"\n                ]\n             ]\n           }\n       ]\n       ```\n\n7.  **שיר:** \"מאיר גרין בסינגל אלולי חדש ימי רחמים\"\n\n    *   **ניתוח:**\n        *  \"מאיר גרין\" הוא זמר.\n        *    \"ימי רחמים\" הוא שם השיר.\n    *   **תיוג:**\n      ```json\n         [\n           \"מאיר גרין בסינגל אלולי חדש ימי רחמים\",\n            {\n             \"entities\": [\n                [\n                  0,\n                   9,\n                  \"SINGER\"\n                 ],\n                 [\n                  29,\n                   38,\n                    \"SONG\"\n                  ]\n               ]\n             }\n         ]\n      ```\n\n8.  **שיר**: \"יוסף משה כהנא מגיש לחיים טיש חב ד 2 תקציר האלבום Lechai 134\"\n    *   **ניתוח:**\n        *    \"יוסף משה כהנא\" הוא זמר.\n        *   \"Lechai 134\" הוא שם האלבום.\n        *   \"תקציר האלבום\" הוא חלק משם השיר\n        * \"2\" הוא חלק משם השיר\n    *   **תיוג:**\n        ```json\n        [\n           \"יוסף משה כהנא מגיש לחיים טיש חב ד 2 תקציר האלבום Lechai 134\",\n           {\n             \"entities\": [\n                [\n                 0,\n                 14,\n                 \"SINGER\"\n                 ],\n                [\n                 58,\n                68,\n                 \"ALBUM\"\n                  ],\n                 [\n                   30,\n                    57,\n                     \"SONG\"\n                 ]\n               ]\n             }\n        ]\n       ```\n\n**טיפים:**\n\n*   **הקפדה על טווחים:** וודא שטווח התווים של כל ישות מדויק.\n*   **עקביות:** השתמש באותה מתודולוגיה עבור כל השירים.\n*   **שימוש נכון ב-`MISC`:** הקפד להשתמש ב-`MISC` רק עבור מידע שאינו קשור למוזיקה ושאינו רלוונטי, ואל תכלול מספרי רצועה בקטגוריה זו.\n*   **זמרים בנפרד**: תייג כל שם זמר, מקהלה, תזמורת בנפרד.\n*   **ללא תארים:** תייג את שם הזמר או המקהלה ללא תארים!",
)

def read_in_chunks(file_object, chunk_size=100, max_lines=300):
    """Generator לקריאת קובץ ב-chunks של מספר שורות מוגדר, עם מגבלה על סך השורות."""
    chunk = []
    line_count = 0
    for line in file_object:
        line = line.strip()
        if line:
            chunk.append(line)
            line_count += 1
            if len(chunk) == chunk_size:
                yield chunk
                chunk = []
            if line_count >= max_lines:
                break
    if chunk:
        yield chunk

def process_chunk(chat_session, songs_chunk):
    """מעבד חבילת שירים ושולח למודל ג'מיני."""
    # הכנת הקלט למודל - כל שיר בשורה נפרדת
    input_text = "\n".join(songs_chunk)
    
    # שליחת ההודעה למודל
    response = chat_session.send_message(input_text)
    
    # החזרת הטקסט הגולמי מהתגובה
    return response.text

def parse_response(response_text):
    """ממיר את הטקסט שהוחזר מהמודל למבנה JSON."""
    # הסרת רווחים וסימני קוד אם קיימים
    response_text = response_text.strip()
    if response_text.startswith("```"):
        # הסרת סימוני הקוד
        response_text = '\n'.join(response_text.split('\n')[1:-1]).strip()
    
    try:
        # ניסיון לפענח את הטקסט כ-JSON
        data = json.loads(response_text)
        return data
    except json.JSONDecodeError as e:
        print("שגיאה בפיענוח ה-JSON:", e)
        print("התוכן שהוחזר:", response_text)
        return None

def main():
    input_file = 'all_songs.txt'
    output_file = 'tagged_songs.json'
    
    # יצירת חוברת הצ'אט
    chat_session = model.start_chat(history=[])
    
    # פתיחת הקובץ לכתיבה
    with open(output_file, 'w', encoding='utf-8') as out_f:
        out_f.write('[\n')  # התחלת מערך JSON
        first_entry = True  # לצורך הוספת פסיק בין האיברים
        
        with open(input_file, 'r', encoding='utf-8') as f:
            for chunk_number, songs_chunk in enumerate(read_in_chunks(f, 100, max_lines=300), start=1):
                print(f"מעבד חבילה מספר {chunk_number} עם {len(songs_chunk)} שירים...")
                response_text = process_chunk(chat_session, songs_chunk)
                print(f"תשובה מחבילה מספר {chunk_number}:")
                print(response_text)  # הדפסת התגובה כדי לבדוק את הפורמט
                
                tagged_data = parse_response(response_text)
                if tagged_data:
                    # בדיקה אם הנתונים הם רשימה של רשימות
                    if isinstance(tagged_data, list):
                        for entry in tagged_data:
                            if not first_entry:
                                out_f.write(',\n')
                            json.dump(entry, out_f, ensure_ascii=False, indent=4)
                            first_entry = False
                    else:
                        print(f"התגובה מחבילה מספר {chunk_number} אינה ברשימה. דלג עליה.")
                else:
                    print(f"לא ניתן לעבד את החבילה מספר {chunk_number}. דלג עליה.")
        
        out_f.write('\n]')  # סיום מערך JSON
    
    print(f"תהליך התיוג הושלם. התוצאות נשמרו בקובץ {output_file}.")

if __name__ == "__main__":
    main()
